#
# Copyright (c) 2017 The Ontario Institute for Cancer Research. All rights reserved.
#
# This program and the accompanying materials are made available under the terms of the GNU Public License v3.0.
# You should have received a copy of the GNU General Public License along with
# this program. If not, see <http://www.gnu.org/licenses/>.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY
# EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
# OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT
# SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
# INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED
# TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
# OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER
# IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
# ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#
# DCC Portal Server - Default Configuration
#

server:
  version: 1.0
  port: 8080

dcc-storage:
  url: "https://storage.cancercollaboratory.org"


# Hibernate
spring:
  jpa:
    properties:
      hibernate.dialect: com.marvinformatics.hibernate.json.PostgreSQLJsonDialect

# Management
management:
  server:
    port: 8081

swagger:
  alternateUrl: "/api-docs"

id:
  idUrl: "http://localhost:9090"
  authToken: "idToken"
  realIds: false
  persistInMemory: false

validation:
  delayMs: 30
  threads:
    core: 5
    max: 10
  queue:
    capacity: 100


auth:
  # Connection retries in case of connection failure
  connection:

    # Max number of retries
    maxRetries: 5

    # Initial timeoutMs before the first retry. In milliseconds.
    initialBackoff: 15000

    # Multiplier that defines value of consequent timeouts before the next retry.
    # E.g. TIMEOUT(n) = TIMEOUT(n-1) * MULTIPLIER
    multiplier: 2.0

# RTISMA_HACK
# logging.level.root: debug
logging.level.org.hibernate.SQL: debug

---
spring.profiles: async-test
validation.delayMs: 5000

---
spring.profiles: test
spring:
  profiles:
    include: [dev]

---
spring.profiles: dev
spring:
  profiles:
    include: [fastTest]
  datasource:
    initialization-mode: always

id.persistInMemory: true

auth:
  server:
    prefix: "song"
    suffix: "upload"

# Datasource
spring.datasource:
  driver-class-name: org.postgresql.Driver
  url: jdbc:postgresql://localhost:5432/test_db?stringtype=unspecified
  username:
  password:
  max-active: 10
  max-idle: 1
  min-idle: 1

---

spring:
  profiles: secure

auth:
  server:
    url: "http://localhost:8000/check_token/"
    clientId: "clientId"
    clientSecret: "clientSecret"
    enableStrictSSL: false
    enableHttpLogging: false
    prefix: "song"
    suffix: "upload"
---

spring:
  profiles: fastTest

auth:
  connection:
          # Max number of retries
          maxRetries: 5

          # Initial timeoutMs before the first retry. In milliseconds.
          initialBackoff: 50

          # Multiplier that defines value of consequent timeouts before the next retry.
          # E.g. TIMEOUT(n) = TIMEOUT(n-1) * MULTIPLIER
          multiplier: 1.2

---

spring:
  profiles: prod
  datasource:
    initialization-mode: never

# Datasource
spring.datasource:
  driver-class-name: org.postgresql.Driver
  url: jdbc:postgresql://localhost/song?stringtype=unspecified
  username:
  password:
  max-active: 10
  max-idle: 1
  min-idle: 1

---
spring:
  profiles: test
  autoconfigure.exclude: SecurityConfig.class

id.persistInMemory: true
dcc-storage.url: http://localhost:8087

---
spring:
  profiles: kafka
  kafka:
    bootstrap-servers: localhost:9092
    template:
      default-topic: song
